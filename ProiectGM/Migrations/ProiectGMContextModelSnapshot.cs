// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectGM.Data;

#nullable disable

namespace ProiectGM.Migrations
{
    [DbContext(typeof(ProiectGMContext))]
    partial class ProiectGMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExhibitionVisitor", b =>
                {
                    b.Property<int>("ExhibitionsAttendedId")
                        .HasColumnType("int");

                    b.Property<int>("VisitorsId")
                        .HasColumnType("int");

                    b.HasKey("ExhibitionsAttendedId", "VisitorsId");

                    b.HasIndex("VisitorsId");

                    b.ToTable("ExhibitionVisitor");
                });

            modelBuilder.Entity("ProiectGM.Models.Artwork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("ExhibitionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ExhibitionId");

                    b.ToTable("Artwork");
                });

            modelBuilder.Entity("ProiectGM.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("ProiectGM.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ExhibitionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExhibitionId")
                        .IsUnique();

                    b.ToTable("Department");
                });

            modelBuilder.Entity("ProiectGM.Models.Exhibition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Exhibition");
                });

            modelBuilder.Entity("ProiectGM.Models.Visitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Visitor");
                });

            modelBuilder.Entity("ExhibitionVisitor", b =>
                {
                    b.HasOne("ProiectGM.Models.Exhibition", null)
                        .WithMany()
                        .HasForeignKey("ExhibitionsAttendedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectGM.Models.Visitor", null)
                        .WithMany()
                        .HasForeignKey("VisitorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProiectGM.Models.Artwork", b =>
                {
                    b.HasOne("ProiectGM.Models.Author", "Author")
                        .WithMany("Artworks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectGM.Models.Exhibition", "Exhibition")
                        .WithMany("Artworks")
                        .HasForeignKey("ExhibitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Exhibition");
                });

            modelBuilder.Entity("ProiectGM.Models.Department", b =>
                {
                    b.HasOne("ProiectGM.Models.Exhibition", "Exhibition")
                        .WithOne("Department")
                        .HasForeignKey("ProiectGM.Models.Department", "ExhibitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exhibition");
                });

            modelBuilder.Entity("ProiectGM.Models.Author", b =>
                {
                    b.Navigation("Artworks");
                });

            modelBuilder.Entity("ProiectGM.Models.Exhibition", b =>
                {
                    b.Navigation("Artworks");

                    b.Navigation("Department")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
